[project]
name = "mineru-service"
version = "0.1.0"
requires-python = ">=3.10"
dependencies = [
    "fastapi>=0.115.11",
    "filetype>=1.2.0",
    "litserve>=0.2.7",
    "python-dotenv>=1.0.1",
    "python-multipart>=0.0.20",
]

[project.optional-dependencies]
paddlepaddle = ["paddlepaddle-gpu==3.0.0rc1"]
mineru = ["magic-pdf[full]==1.2.2", "doclayout-yolo==0.0.2b1", "detectron2"]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[dependency-groups]
dev = ["mypy==1.15.0", "pre-commit>=4.1.0", "ruff==0.11.0"]

[tool.uv]
managed = true
package = false
no-sources = false
prerelease = "if-necessary-or-explicit"
index-strategy = "unsafe-best-match"
environments = ["sys_platform == 'linux' and platform_machine == 'x86_64'"]
override-dependencies = [
    "paddlepaddle; sys_platform == 'never'",
    "torch==2.4.1+cu124",
    "torchvision==0.19.1+cu124",
    "nvidia-cublas-cu12",
    "nvidia-cuda-cupti-cu12",
    "nvidia-cuda-nvrtc-cu12",
    "nvidia-cuda-runtime-cu12",
    "nvidia-cudnn-cu12",
    "nvidia-cufft-cu12",
    "nvidia-curand-cu12",
    "nvidia-cusolver-cu12",
    "nvidia-cusparse-cu12",
    "nvidia-nccl-cu12",
    "nvidia-nvtx-cu12",
]

[tool.uv.sources]
torch = { index = "torch" }
torchvision = { index = "torch" }
paddlepaddle-gpu = { index = "paddle" }
detectron2 = { index = "mineru" }

[[tool.uv.index]]
name = "pypi"
url = "https://pypi.org/simple/"
default = true

[[tool.uv.index]]
name = "torch"
url = "https://download.pytorch.org/whl/cu124"
explicit = true

[[tool.uv.index]]
name = "paddle"
url = "https://www.paddlepaddle.org.cn/packages/stable/cu123"
explicit = true

[[tool.uv.index]]
name = "mineru"
url = "https://wheels.myhloli.com"
explicit = true

[tool.ruff]
line-length = 119
indent-width = 4
target-version = "py310"
extend-exclude = ["*.pyi"]

[tool.ruff.lint]
select = [
    # pycodestyle
    "E",
    # Pyflakes
    "F",
    # flake8-bugbear
    "B",
    # flake8-future-annotations
    "FA",
    # flake8-simplify
    "SIM",
    # flake8-logging
    "LOG",
    # flake8-print
    "T20",
    # isort
    "I",
    # pyupgrade
    "UP",
    # ruff
    "RUF",
    # fastapilitserve
    "FAST",
]
ignore = [
    "COM812",
    "COM819",
    "D100",
    "D203",
    "D213",
    "D300",
    "E111",
    "E114",
    "E117",
    "E501",
    "ISC001",
    "ISC002",
    "Q000",
    "Q001",
    "Q002",
    "Q003",
    "W191",
    "SIM300",
    "RUF001",
    "RUF002",
    "RUF003",
]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["E402"]
"**/test/**.py" = ["LOG", "T20"]
"**/test_*.py" = ["LOG", "T20"]

[tool.ruff.lint.isort]
extra-standard-library = ["typing_extensions"]

[tool.mypy]
plugins = ["pydantic.mypy"]
disable_error_code = "import-untyped"

[tool.pydantic-mypy]
init_forbid_extra = true
init_typed = true
warn_required_dynamic_aliases = true
warn_untyped_fields = true
